{"ast":null,"code":"import { ParallaxController, parseValueAndUnit, ScrollAxis } from 'parallax-controller';\nexport { EasingPreset } from 'parallax-controller';\nimport React, { useEffect, useContext, useRef, useState, Component } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction removeUndefinedObjectKeys(obj) {\n  Object.keys(obj).forEach(function (key) {\n    return obj[key] === undefined ? delete obj[key] : {};\n  });\n  return obj;\n}\n\nvar _excluded = [\"disabled\", \"easing\", \"endScroll\", \"onChange\", \"onEnter\", \"onExit\", \"onProgressChange\", \"opacity\", \"rootMargin\", \"rotate\", \"rotateX\", \"rotateY\", \"rotateZ\", \"scale\", \"scaleX\", \"scaleY\", \"scaleZ\", \"shouldAlwaysCompleteAnimation\", \"shouldDisableScalingTranslations\", \"speed\", \"startScroll\", \"targetElement\", \"translateX\", \"translateY\"];\n\nfunction getIsolatedParallaxProps(props) {\n  var disabled = props.disabled,\n      easing = props.easing,\n      endScroll = props.endScroll,\n      onChange = props.onChange,\n      onEnter = props.onEnter,\n      onExit = props.onExit,\n      onProgressChange = props.onProgressChange,\n      opacity = props.opacity,\n      rootMargin = props.rootMargin,\n      rotate = props.rotate,\n      rotateX = props.rotateX,\n      rotateY = props.rotateY,\n      rotateZ = props.rotateZ,\n      scale = props.scale,\n      scaleX = props.scaleX,\n      scaleY = props.scaleY,\n      scaleZ = props.scaleZ,\n      shouldAlwaysCompleteAnimation = props.shouldAlwaysCompleteAnimation,\n      shouldDisableScalingTranslations = props.shouldDisableScalingTranslations,\n      speed = props.speed,\n      startScroll = props.startScroll,\n      targetElement = props.targetElement,\n      translateX = props.translateX,\n      translateY = props.translateY,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var parallaxProps = removeUndefinedObjectKeys({\n    disabled: disabled,\n    easing: easing,\n    endScroll: endScroll,\n    onChange: onChange,\n    onEnter: onEnter,\n    onExit: onExit,\n    onProgressChange: onProgressChange,\n    opacity: opacity,\n    rootMargin: rootMargin,\n    rotate: rotate,\n    rotateX: rotateX,\n    rotateY: rotateY,\n    rotateZ: rotateZ,\n    scale: scale,\n    scaleX: scaleX,\n    scaleY: scaleY,\n    scaleZ: scaleZ,\n    shouldAlwaysCompleteAnimation: shouldAlwaysCompleteAnimation,\n    shouldDisableScalingTranslations: shouldDisableScalingTranslations,\n    speed: speed,\n    startScroll: startScroll,\n    targetElement: targetElement,\n    translateX: translateX,\n    translateY: translateY\n  });\n  return {\n    parallaxProps: parallaxProps,\n    rest: rest\n  };\n}\n\nfunction useVerifyController(controller) {\n  useEffect(function () {\n    var isServer = typeof window === 'undefined'; // Make sure the provided controller is an instance of the Parallax Controller\n\n    var isInstance = controller instanceof ParallaxController; // Throw if neither context or global is available\n\n    if (!isServer && !controller && !isInstance) {\n      throw new Error(\"Must wrap your application's <Parallax /> components in a <ParallaxProvider />.\");\n    }\n  }, [controller]);\n}\n\nvar ParallaxContext = /*#__PURE__*/React.createContext(null);\n\nfunction useParallaxController() {\n  var parallaxController = useContext(ParallaxContext);\n  var isServer = typeof window === 'undefined';\n\n  if (isServer) {\n    return null;\n  }\n\n  if (!parallaxController) {\n    throw new Error('Could not find `react-scroll-parallax` context value. Please ensure the component is wrapped in a <ParallaxProvider>');\n  }\n\n  return parallaxController;\n}\n\nfunction useParallax(props) {\n  var controller = useParallaxController();\n  var ref = useRef(null);\n\n  var _getIsolatedParallaxP = getIsolatedParallaxProps(props),\n      parallaxProps = _getIsolatedParallaxP.parallaxProps;\n\n  useVerifyController(controller);\n\n  var _useState = useState(),\n      element = _useState[0],\n      setElement = _useState[1]; // create element\n\n\n  useEffect(function () {\n    var newElement;\n\n    if (ref.current instanceof HTMLElement) {\n      var options = {\n        el: ref.current,\n        props: parallaxProps\n      };\n      newElement = controller == null ? void 0 : controller.createElement(options);\n      setElement(newElement);\n    } else {\n      throw new Error('You must assign the ref returned by the useParallax() hook to an HTML Element.');\n    }\n\n    return function () {\n      if (newElement) {\n        controller == null ? void 0 : controller.removeElementById(newElement.id);\n      }\n    };\n  }, []); // update element\n\n  useEffect(function () {\n    if (element) {\n      if (props.disabled) {\n        controller == null ? void 0 : controller.resetElementStyles(element);\n        controller == null ? void 0 : controller.updateElementPropsById(element.id, parallaxProps);\n      } else {\n        controller == null ? void 0 : controller.updateElementPropsById(element.id, parallaxProps);\n      }\n    }\n  }, [props.disabled, props.easing, props.endScroll, props.onChange, props.onEnter, props.onExit, props.onProgressChange, props.opacity, props.rootMargin, props.rotate, props.rotateX, props.rotateY, props.rotateZ, props.scale, props.scaleX, props.scaleY, props.scaleZ, props.shouldAlwaysCompleteAnimation, props.shouldDisableScalingTranslations, props.speed, props.startScroll, props.targetElement, props.translateX, props.translateY]);\n  return {\n    ref: ref,\n    controller: controller,\n    element: element\n  };\n}\n\nfunction Parallax(props) {\n  var _getIsolatedParallaxP = getIsolatedParallaxProps(props),\n      parallaxProps = _getIsolatedParallaxP.parallaxProps,\n      rest = _getIsolatedParallaxP.rest;\n\n  var _useParallax = useParallax(parallaxProps),\n      ref = _useParallax.ref;\n\n  return React.createElement(\"div\", Object.assign({\n    ref: ref\n  }, rest), props.children);\n}\n\nvar FALLBACK_RECT = {\n  height: 0\n};\n\nfunction getExpandedStyle(layer) {\n  if (Array.isArray(layer.translateY)) {\n    var translateYStart = parseValueAndUnit(layer.translateY[0]);\n    var translateYEnd = parseValueAndUnit(layer.translateY[1]);\n\n    if (translateYStart.unit === 'px' && translateYEnd.unit === 'px') {\n      return {\n        top: Math.abs(translateYEnd.value) * -1 + \"px\",\n        bottom: Math.abs(translateYStart.value) * -1 + \"px\"\n      };\n    }\n\n    if (translateYStart.unit === '%' && translateYEnd.unit === '%') {\n      var _layer$targetElement;\n\n      var clientRect = ((_layer$targetElement = layer.targetElement) == null ? void 0 : _layer$targetElement.getBoundingClientRect()) || FALLBACK_RECT;\n      var top = Math.abs(clientRect.height * 0.01 * translateYEnd.value) * -1;\n      var bottom = Math.abs(clientRect.height * 0.01 * translateYStart.value) * -1;\n      return {\n        top: top + \"px\",\n        bottom: bottom + \"px\"\n      };\n    }\n  }\n\n  if (layer.speed) {\n    var speed = layer.speed || 0;\n    return {\n      top: Math.abs(speed) * 10 * -1 + 'px',\n      bottom: Math.abs(speed) * 10 * -1 + 'px'\n    };\n  }\n\n  return {};\n}\n\nfunction getImageStyle(layer) {\n  return layer.image ? {\n    backgroundImage: \"url(\" + layer.image + \")\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover'\n  } : {};\n}\n\nvar _excluded$1 = [\"children\", \"disabled\", \"style\", \"expanded\", \"image\", \"testId\"];\nvar absoluteStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0\n};\n\nvar ParallaxBannerLayer = function ParallaxBannerLayer(props) {\n  var _getIsolatedParallaxP = getIsolatedParallaxProps(props),\n      parallaxProps = _getIsolatedParallaxP.parallaxProps,\n      rest = _getIsolatedParallaxP.rest;\n\n  var style = rest.style,\n      _rest$expanded = rest.expanded,\n      expanded = _rest$expanded === void 0 ? true : _rest$expanded,\n      testId = rest.testId,\n      divProps = _objectWithoutPropertiesLoose(rest, _excluded$1);\n\n  var imageStyle = getImageStyle(props);\n  var expandedStyle = expanded ? getExpandedStyle(props) : {};\n  var parallax = useParallax(_extends({\n    targetElement: props.targetElement,\n    shouldDisableScalingTranslations: true\n  }, parallaxProps));\n  return React.createElement(\"div\", Object.assign({\n    \"data-testid\": testId,\n    ref: parallax.ref,\n    style: _extends({}, imageStyle, absoluteStyle, expandedStyle, style)\n  }, divProps), rest.children);\n};\n\nvar _excluded$2 = [\"disabled\", \"style\", \"layers\"];\nvar containerStyle = {\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%'\n};\n\nvar ParallaxBanner = function ParallaxBanner(props) {\n  var _useState = useState(null),\n      targetElement = _useState[0],\n      setTargetElement = _useState[1];\n\n  var containerRef = useRef(null);\n  useEffect(function () {\n    setTargetElement(containerRef.current);\n  }, []);\n\n  var rootStyle = props.style,\n      _props$layers = props.layers,\n      layers = _props$layers === void 0 ? [] : _props$layers,\n      rootRest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  return React.createElement(\"div\", Object.assign({\n    ref: containerRef,\n    style: _extends({}, containerStyle, rootStyle)\n  }, rootRest), layers.map(function (layer, i) {\n    return targetElement && React.createElement(ParallaxBannerLayer, Object.assign({}, layer, {\n      targetElement: targetElement,\n      key: \"layer-\" + i,\n      testId: \"layer-\" + i\n    }));\n  }), props.children);\n};\n\nvar createController = function createController(options) {\n  // Don't initialize on the server\n  var isServer = typeof window === 'undefined';\n\n  if (!isServer) {\n    // Must not be the server so kick it off...\n    return ParallaxController.init(options);\n  }\n\n  return null;\n};\n\nvar ParallaxProvider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ParallaxProvider, _Component);\n\n  function ParallaxProvider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.controller = createController({\n      scrollAxis: props.scrollAxis,\n      scrollContainer: props.scrollContainer\n    });\n    return _this;\n  }\n\n  var _proto = ParallaxProvider.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.scrollContainer !== this.props.scrollContainer) {\n      // @ts-ignore\n      this.controller.updateScrollContainer(this.props.scrollContainer);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    // @ts-ignore\n    this.controller = this.controller.destroy();\n  };\n\n  _proto.render = function render() {\n    var children = this.props.children;\n    return (// @ts-ignore\n      React.createElement(ParallaxContext.Provider, {\n        value: this.controller\n      }, children)\n    );\n  };\n\n  return ParallaxProvider;\n}(Component);\n\nParallaxProvider.defaultProps = {\n  scrollAxis: ScrollAxis.vertical\n};\nexport { Parallax, ParallaxBanner, ParallaxContext, ParallaxProvider, useParallax, useParallaxController };","map":{"version":3,"sources":["../src/utils/removeUndefinedObjectKeys.ts","../src/helpers/getIsolatedParallaxProps.ts","../src/components/Parallax/hooks.ts","../src/context/ParallaxContext.ts","../src/hooks/useParallaxController.ts","../src/hooks/useParallax.ts","../src/components/Parallax/index.tsx","../src/components/ParallaxBanner/helpers/getExpandedStyle.ts","../src/components/ParallaxBanner/helpers/getImageStyle.ts","../src/components/ParallaxBanner/components/ParallaxBannerLayer.tsx","../src/components/ParallaxBanner/index.tsx","../src/components/ParallaxProvider/helpers.ts","../src/components/ParallaxProvider/index.tsx"],"names":["removeUndefinedObjectKeys","obj","Object","getIsolatedParallaxProps","props","disabled","easing","endScroll","onChange","onEnter","onExit","onProgressChange","opacity","rootMargin","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","shouldAlwaysCompleteAnimation","shouldDisableScalingTranslations","speed","startScroll","targetElement","translateX","translateY","rest","parallaxProps","useVerifyController","controller","useEffect","isServer","isInstance","ParallaxContext","React","useParallaxController","parallaxController","useContext","useParallax","ref","useRef","element","setElement","useState","options","el","newElement","Parallax","FALLBACK_RECT","height","getExpandedStyle","layer","Array","translateYStart","parseValueAndUnit","translateYEnd","top","Math","bottom","clientRect","getImageStyle","backgroundImage","backgroundPosition","backgroundSize","absoluteStyle","position","left","right","ParallaxBannerLayer","style","expanded","testId","divProps","imageStyle","expandedStyle","parallax","containerStyle","overflow","width","ParallaxBanner","setTargetElement","containerRef","rootStyle","layers","rootRest","key","i","createController","ParallaxController","ParallaxProvider","scrollAxis","ScrollAxis","vertical","scrollContainer","componentDidUpdate","prevProps","componentWillUnmount","render","children","value"],"mappings":"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","sourcesContent":["export function removeUndefinedObjectKeys(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key) =>\n    obj[key] === undefined ? delete obj[key] : {}\n  );\n  return obj;\n}\n","import { ParallaxElementConfig } from 'parallax-controller';\nimport { removeUndefinedObjectKeys } from '../utils/removeUndefinedObjectKeys';\n\nexport function getIsolatedParallaxProps(props: any): {\n  parallaxProps: ParallaxElementConfig;\n  rest: Record<string, any>;\n} {\n  const {\n    disabled,\n    easing,\n    endScroll,\n    onChange,\n    onEnter,\n    onExit,\n    onProgressChange,\n    opacity,\n    rootMargin,\n    rotate,\n    rotateX,\n    rotateY,\n    rotateZ,\n    scale,\n    scaleX,\n    scaleY,\n    scaleZ,\n    shouldAlwaysCompleteAnimation,\n    shouldDisableScalingTranslations,\n    speed,\n    startScroll,\n    targetElement,\n    translateX,\n    translateY,\n    ...rest\n  } = props;\n\n  const parallaxProps = removeUndefinedObjectKeys({\n    disabled,\n    easing,\n    endScroll,\n    onChange,\n    onEnter,\n    onExit,\n    onProgressChange,\n    opacity,\n    rootMargin,\n    rotate,\n    rotateX,\n    rotateY,\n    rotateZ,\n    scale,\n    scaleX,\n    scaleY,\n    scaleZ,\n    shouldAlwaysCompleteAnimation,\n    shouldDisableScalingTranslations,\n    speed,\n    startScroll,\n    targetElement,\n    translateX,\n    translateY,\n  });\n\n  return {\n    parallaxProps,\n    rest,\n  };\n}\n","import { ParallaxController } from 'parallax-controller';\nimport { useEffect } from 'react';\n\nexport function useVerifyController(controller: ParallaxController | unknown) {\n  useEffect(() => {\n    const isServer = typeof window === 'undefined';\n    // Make sure the provided controller is an instance of the Parallax Controller\n    const isInstance = controller instanceof ParallaxController;\n    // Throw if neither context or global is available\n    if (!isServer && !controller && !isInstance) {\n      throw new Error(\n        \"Must wrap your application's <Parallax /> components in a <ParallaxProvider />.\"\n      );\n    }\n  }, [controller]);\n}\n","import React from 'react';\nimport { ParallaxController } from 'parallax-controller';\n\nexport const ParallaxContext = React.createContext<ParallaxController | null>(\n  null\n);\n","import { useContext } from 'react';\nimport { ParallaxController } from 'parallax-controller';\nimport { ParallaxContext } from '../context/ParallaxContext';\n\nexport function useParallaxController(): ParallaxController | null {\n  const parallaxController = useContext(ParallaxContext);\n  const isServer = typeof window === 'undefined';\n  if (isServer) {\n    return null;\n  }\n\n  if (!parallaxController) {\n    throw new Error(\n      'Could not find `react-scroll-parallax` context value. Please ensure the component is wrapped in a <ParallaxProvider>'\n    );\n  }\n\n  return parallaxController;\n}\n","import { CreateElementOptions, Element } from 'parallax-controller';\nimport { useEffect, useRef, useState } from 'react';\nimport { useVerifyController } from '../components/Parallax/hooks';\nimport { ParallaxProps } from '../components/Parallax/types';\nimport { getIsolatedParallaxProps } from '../helpers/getIsolatedParallaxProps';\nimport { useParallaxController } from './useParallaxController';\n\nexport function useParallax<T extends HTMLElement>(props: ParallaxProps) {\n  const controller = useParallaxController();\n  const ref = useRef<T>(null);\n  const { parallaxProps } = getIsolatedParallaxProps(props);\n\n  useVerifyController(controller);\n\n  const [element, setElement] = useState<Element>();\n\n  // create element\n  useEffect(() => {\n    let newElement: Element | undefined;\n    if (ref.current instanceof HTMLElement) {\n      const options: CreateElementOptions = {\n        el: ref.current,\n        props: parallaxProps,\n      };\n      newElement = controller?.createElement(options);\n      setElement(newElement);\n    } else {\n      throw new Error(\n        'You must assign the ref returned by the useParallax() hook to an HTML Element.'\n      );\n    }\n\n    return () => {\n      if (newElement) {\n        controller?.removeElementById(newElement.id);\n      }\n    };\n  }, []);\n\n  // update element\n  useEffect(() => {\n    if (element) {\n      if (props.disabled) {\n        controller?.resetElementStyles(element);\n        controller?.updateElementPropsById(element.id, parallaxProps);\n      } else {\n        controller?.updateElementPropsById(element.id, parallaxProps);\n      }\n    }\n  }, [\n    props.disabled,\n    props.easing,\n    props.endScroll,\n    props.onChange,\n    props.onEnter,\n    props.onExit,\n    props.onProgressChange,\n    props.opacity,\n    props.rootMargin,\n    props.rotate,\n    props.rotateX,\n    props.rotateY,\n    props.rotateZ,\n    props.scale,\n    props.scaleX,\n    props.scaleY,\n    props.scaleZ,\n    props.shouldAlwaysCompleteAnimation,\n    props.shouldDisableScalingTranslations,\n    props.speed,\n    props.startScroll,\n    props.targetElement,\n    props.translateX,\n    props.translateY,\n  ]);\n\n  return { ref, controller, element };\n}\n","import React, { PropsWithChildren } from 'react';\nimport { getIsolatedParallaxProps } from '../../helpers/getIsolatedParallaxProps';\nimport { useParallax } from '../../hooks/useParallax';\nimport { ParallaxProps } from './types';\n\nexport function Parallax(props: PropsWithChildren<ParallaxProps>) {\n  const { parallaxProps, rest } = getIsolatedParallaxProps(props);\n  const { ref } = useParallax<HTMLDivElement>(parallaxProps);\n  return (\n    <div ref={ref} {...rest}>\n      {props.children}\n    </div>\n  );\n}\n","import { parseValueAndUnit } from 'parallax-controller';\nimport { BannerLayer } from '../types';\n\nconst FALLBACK_RECT = {\n  height: 0,\n};\n\nexport function getExpandedStyle(layer: BannerLayer) {\n  if (Array.isArray(layer.translateY)) {\n    const translateYStart = parseValueAndUnit(layer.translateY[0]);\n    const translateYEnd = parseValueAndUnit(layer.translateY[1]);\n\n    if (translateYStart.unit === 'px' && translateYEnd.unit === 'px') {\n      return {\n        top: `${Math.abs(translateYEnd.value) * -1}px`,\n        bottom: `${Math.abs(translateYStart.value) * -1}px`,\n      };\n    }\n\n    if (translateYStart.unit === '%' && translateYEnd.unit === '%') {\n      const clientRect =\n        layer.targetElement?.getBoundingClientRect() || FALLBACK_RECT;\n      const top = Math.abs(clientRect.height * 0.01 * translateYEnd.value) * -1;\n      const bottom =\n        Math.abs(clientRect.height * 0.01 * translateYStart.value) * -1;\n      return {\n        top: `${top}px`,\n        bottom: `${bottom}px`,\n      };\n    }\n  }\n  if (layer.speed) {\n    const speed = layer.speed || 0;\n\n    return {\n      top: Math.abs(speed) * 10 * -1 + 'px',\n      bottom: Math.abs(speed) * 10 * -1 + 'px',\n    };\n  }\n  return {};\n}\n","import { BannerLayer } from '../types';\n\nexport function getImageStyle(layer: BannerLayer) {\n  return layer.image\n    ? {\n        backgroundImage: `url(${layer.image})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n      }\n    : {};\n}\n","import React, { CSSProperties } from 'react';\nimport { useParallax } from '../../../hooks/useParallax';\nimport { getIsolatedParallaxProps } from '../../../helpers/getIsolatedParallaxProps';\nimport { getExpandedStyle } from '../helpers/getExpandedStyle';\nimport { getImageStyle } from '../helpers/getImageStyle';\nimport { BannerLayer } from '../types';\n\nconst absoluteStyle: CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n};\n\nexport const ParallaxBannerLayer = (\n  props: BannerLayer & { testId: string }\n) => {\n  const { parallaxProps, rest } = getIsolatedParallaxProps(props);\n  const {\n    children,\n    disabled,\n    style,\n    expanded = true,\n    image,\n    testId,\n    ...divProps\n  } = rest;\n\n  const imageStyle = getImageStyle(props);\n  const expandedStyle = expanded ? getExpandedStyle(props) : {};\n  const parallax = useParallax<HTMLDivElement>({\n    targetElement: props.targetElement,\n    shouldDisableScalingTranslations: true,\n    ...parallaxProps,\n  });\n\n  return (\n    <div\n      data-testid={testId}\n      ref={parallax.ref}\n      style={{\n        ...imageStyle,\n        ...absoluteStyle,\n        ...expandedStyle,\n        ...style,\n      }}\n      {...divProps}\n    >\n      {rest.children}\n    </div>\n  );\n};\n","import React, {\n  PropsWithChildren,\n  CSSProperties,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { ParallaxBannerLayer } from './components/ParallaxBannerLayer';\nimport { ParallaxBannerProps } from './types';\n\nconst containerStyle: CSSProperties = {\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%',\n};\n\nexport const ParallaxBanner = (\n  props: PropsWithChildren<ParallaxBannerProps>\n) => {\n  const [targetElement, setTargetElement] = useState<HTMLDivElement | null>(\n    null\n  );\n  const containerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    setTargetElement(containerRef.current);\n  }, []);\n  const {\n    disabled: disableAllLayers,\n    style: rootStyle,\n    layers = [],\n    ...rootRest\n  } = props;\n  return (\n    <div\n      ref={containerRef}\n      style={{ ...containerStyle, ...rootStyle }}\n      {...rootRest}\n    >\n      {layers.map(\n        (layer, i) =>\n          targetElement && (\n            <ParallaxBannerLayer\n              {...layer}\n              targetElement={targetElement}\n              key={`layer-${i}`}\n              testId={`layer-${i}`}\n            />\n          )\n      )}\n      {props.children}\n    </div>\n  );\n};\n","import {\n  ParallaxController,\n  ParallaxControllerOptions,\n} from 'parallax-controller';\n\nexport const createController = (options: ParallaxControllerOptions) => {\n  // Don't initialize on the server\n  const isServer = typeof window === 'undefined';\n\n  if (!isServer) {\n    // Must not be the server so kick it off...\n    return ParallaxController.init(options);\n  }\n  return null;\n};\n","import React, { Component } from 'react';\n\nimport { ParallaxContext } from '../../context/ParallaxContext';\nimport { ParallaxController, ScrollAxis } from 'parallax-controller';\nimport { ParallaxProviderProps } from './types';\nimport { createController } from './helpers';\n\nexport class ParallaxProvider extends Component<ParallaxProviderProps, {}> {\n  static defaultProps = {\n    scrollAxis: ScrollAxis.vertical,\n  };\n\n  controller: ParallaxController | null;\n\n  constructor(props: ParallaxProviderProps) {\n    super(props);\n    this.controller = createController({\n      scrollAxis: props.scrollAxis,\n      scrollContainer: props.scrollContainer,\n    });\n  }\n\n  componentDidUpdate(prevProps: ParallaxProviderProps) {\n    if (prevProps.scrollContainer !== this.props.scrollContainer) {\n      // @ts-ignore\n      this.controller.updateScrollContainer(this.props.scrollContainer);\n    }\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    this.controller = this.controller.destroy();\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      // @ts-ignore\n      <ParallaxContext.Provider value={this.controller}>\n        {children}\n      </ParallaxContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}