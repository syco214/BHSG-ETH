{"ast":null,"code":"var _jsxFileName = \"/Users/sageco/Downloads/mobile-fixed/src/ETH components/Animate/MotionInView.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { motion, useAnimation } from \"framer-motion/dist/framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Box } from \"@material-ui/core\"; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nMotionInView.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  variant: PropTypes.object,\n  transition: PropTypes.object,\n  triggerOnce: PropTypes.bool,\n  threshold: PropTypes.oneOfType([PropTypes.string, PropTypes.array])\n};\n\nfunction MotionInView(_ref) {\n  _s();\n\n  let {\n    children,\n    className,\n    variants,\n    transition,\n    threshold,\n    ...other\n  } = _ref;\n  const controls = useAnimation();\n  const [ref, inView] = useInView({\n    threshold: threshold ? threshold : 0,\n    triggerOnce: true\n  });\n  useEffect(() => {\n    if (inView) {\n      controls.start(Object.keys(variants)[1]);\n    } else {\n      controls.start(Object.keys(variants)[0]);\n    }\n  }, [controls, inView, variants]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: ref,\n    component: motion.div,\n    initial: Object.keys(variants)[0],\n    animate: controls,\n    variants: variants,\n    transition: transition,\n    className: className,\n    ...other,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MotionInView, \"2NEUvrxzw09dl1eC0Q0pbm0pOIE=\", false, function () {\n  return [useAnimation, useInView];\n});\n\n_c = MotionInView;\nexport default MotionInView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MotionInView\");","map":{"version":3,"sources":["/Users/sageco/Downloads/mobile-fixed/src/ETH components/Animate/MotionInView.js"],"names":["PropTypes","React","useEffect","motion","useAnimation","useInView","Box","MotionInView","propTypes","children","node","className","string","variant","object","transition","triggerOnce","bool","threshold","oneOfType","array","variants","other","controls","ref","inView","start","Object","keys","div"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,kCAArC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,GAAT,QAAoB,mBAApB,C,CAEA;;;AAEAC,YAAY,CAACC,SAAb,GAAyB;AACvBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,IADG;AAEvBC,EAAAA,SAAS,EAAEX,SAAS,CAACY,MAFE;AAGvBC,EAAAA,OAAO,EAAEb,SAAS,CAACc,MAHI;AAIvBC,EAAAA,UAAU,EAAEf,SAAS,CAACc,MAJC;AAKvBE,EAAAA,WAAW,EAAEhB,SAAS,CAACiB,IALA;AAMvBC,EAAAA,SAAS,EAAElB,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACY,MAAX,EAAmBZ,SAAS,CAACoB,KAA7B,CAApB;AANY,CAAzB;;AASA,SAASb,YAAT,OAOG;AAAA;;AAAA,MAPmB;AACpBE,IAAAA,QADoB;AAEpBE,IAAAA,SAFoB;AAGpBU,IAAAA,QAHoB;AAIpBN,IAAAA,UAJoB;AAKpBG,IAAAA,SALoB;AAMpB,OAAGI;AANiB,GAOnB;AACD,QAAMC,QAAQ,GAAGnB,YAAY,EAA7B;AACA,QAAM,CAACoB,GAAD,EAAMC,MAAN,IAAgBpB,SAAS,CAAC;AAC9Ba,IAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAH,GAAe,CADL;AAE9BF,IAAAA,WAAW,EAAE;AAFiB,GAAD,CAA/B;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,MAAJ,EAAY;AACVF,MAAAA,QAAQ,CAACG,KAAT,CAAeC,MAAM,CAACC,IAAP,CAAYP,QAAZ,EAAsB,CAAtB,CAAf;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACG,KAAT,CAAeC,MAAM,CAACC,IAAP,CAAYP,QAAZ,EAAsB,CAAtB,CAAf;AACD;AACF,GANQ,EAMN,CAACE,QAAD,EAAWE,MAAX,EAAmBJ,QAAnB,CANM,CAAT;AAQA,sBACE,QAAC,GAAD;AACE,IAAA,GAAG,EAAEG,GADP;AAEE,IAAA,SAAS,EAAErB,MAAM,CAAC0B,GAFpB;AAGE,IAAA,OAAO,EAAEF,MAAM,CAACC,IAAP,CAAYP,QAAZ,EAAsB,CAAtB,CAHX;AAIE,IAAA,OAAO,EAAEE,QAJX;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,UAAU,EAAEN,UANd;AAOE,IAAA,SAAS,EAAEJ,SAPb;AAAA,OAQMW,KARN;AAAA,cAUGb;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApCQF,Y;UAQUH,Y,EACKC,S;;;KATfE,Y;AAsCT,eAAeA,YAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { motion, useAnimation } from \"framer-motion/dist/framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Box } from \"@material-ui/core\";\n\n// ----------------------------------------------------------------------\n\nMotionInView.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  variant: PropTypes.object,\n  transition: PropTypes.object,\n  triggerOnce: PropTypes.bool,\n  threshold: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n};\n\nfunction MotionInView({\n  children,\n  className,\n  variants,\n  transition,\n  threshold,\n  ...other\n}) {\n  const controls = useAnimation();\n  const [ref, inView] = useInView({\n    threshold: threshold ? threshold : 0,\n    triggerOnce: true,\n  });\n\n  useEffect(() => {\n    if (inView) {\n      controls.start(Object.keys(variants)[1]);\n    } else {\n      controls.start(Object.keys(variants)[0]);\n    }\n  }, [controls, inView, variants]);\n\n  return (\n    <Box\n      ref={ref}\n      component={motion.div}\n      initial={Object.keys(variants)[0]}\n      animate={controls}\n      variants={variants}\n      transition={transition}\n      className={className}\n      {...other}\n    >\n      {children}\n    </Box>\n  );\n}\n\nexport default MotionInView;\n"]},"metadata":{},"sourceType":"module"}